@model LibraryApp.Models.Book

<div class="row row-cols-1 row-cols-md-3 g-4">
<div class="container d-flex justify-content-center align-items-center">
	<div class="col">

			@if (TempData["MESSAGEdelete"] == null)
		{
			<div class="card shadow-sm h-100">
			<!-- התמונה -->
			<img src="@Model.ImageUrl" class="card-img-top" alt="@Model.BookTitle" style="width: 100%; height: 200px; object-fit: cover;" />

			<div class="card-body text-center">
				<!-- שם הספר -->
				<h5 class="card-title">@Model.BookTitle</h5>
				<!-- פרטי הספר -->
				<p class="card-text">
					<strong>Author:</strong> @Model.Author <br />
					<strong>Publisher:</strong> @Model.Publisher <br />
					@if (Model.BuyOnly == false)
							{
								<strong>Borrow Price:</strong> @Model.PriceForBorrow 
							}

					<strong>Buy Price:</strong> $@Model.PriceForBuy<br />
					<strong>Sale:</strong> @(@Model.IsOnSale ? "Yes" : "No")<br />
					@if (Model.IsOnSale)
							{
								@if(Model.DISCOUNTEDPriceForBorrow > 0 && Model.BuyOnly==false)
									{<strong>Discounted Borrow Price:</strong> @Model.DISCOUNTEDPriceForBorrow<br />}
								@if (Model.DISCOUNTEDPriceForBuy > 0)
									{<strong>Discounted Buy Price:</strong> @Model.DISCOUNTEDPriceForBuy<br />}
							}
				</p>




				<form action="UpdateBook" method="POST">

					 <input type="hidden" name="BookTitle" value="@Model.BookTitle" />
					 <input type="hidden" name="Author" value="@Model.Author" />
					 <input type="hidden" name="Publisher" value="@Model.Publisher" />
					<input type="hidden" name="YearOfPublication" value="@Model.YearOfPublication" />


					<!-- Row 1 -->
					<div class="row">

								<div class="col-md-6">
									<label for="Popularity" class="small"> Update Popularity:</label>
									<select id="Popularity" name="Popularity" class="form-control form-control-sm" value="@Model.Popularity">
										<option value="1">1</option>
										<option value="2">2</option>
										<option value="3">3</option>
										<option value="4">4</option>
										<option value="5">5</option>
										<option value="6">6</option>
										<option value="7">7</option>
										<option value="8">8</option>
										<option value="9">9</option>
										<option value="10">10</option>
									</select>
								</div>

								<div class="col-md-6">
									<label for="AgeRestriction" class="small">Update Age Restriction:</label>
									<select id="AgeRestriction" name="AgeRestriction" class="form-control form-control-sm" value="@Model.AgeRestriction">
										<option value="18+">18+</option>
										<option value="21+">21+</option>
										<option value="12+">12+</option>
										<option value="7+">7+</option>
										<option value="All Ages">All Ages</option>
									</select>
								</div>

					</div>



					<div class="row mt-3">

					    	<div class="form-check">
								<input type="radio" id="BuyOnlyNo" name="BuyOnly" class="form-check-input" value="false" onchange="DealWithBuyOnly()" 
									   @if (Model.BuyOnly == false) { <text>checked</text> } />
								<label for="BuyOnlyNo" class="form-check-label">Not BUY ONLY</label>
							</div>
							<div class="form-check">
								<input type="radio" id="BuyOnlyYes" name="BuyOnly" class="form-check-input" value="true" onchange="DealWithBuyOnly()" 
									   @if (Model.BuyOnly == true) { <text>checked</text> } />
								<label for="BuyOnlyYes" class="form-check-label">BUY ONLY</label>
							</div>




						@if (Model.BuyOnly == false)
								{
									<div class="col-md-6">
										<label for="PriceForBorrow" class="small"> Update Borrowing price: </label>
										<input type="text" id="PriceForBorrow" name="PriceForBorrow" class="form-control form-control-sm" value = "@Model.PriceForBorrow" onchange="validatePrices()" />
									</div>
								}
						else
								{
									<div class="col-md-6">
										<label for="PriceForBorrow" class="small"> Update Borrowing price: </label>
										<input type="text" id="PriceForBorrow" name="PriceForBorrow" class="form-control form-control-sm" onchange="validatePrices()" disabled />
									</div>
									
								}

                      </div>


				    <div class="row mt-3">
						


						<div class="col-md-6">
							<label for="PriceForBuy" class="small">Update Buying price:</label>
									<input type="text" id="PriceForBuy" name="PriceForBuy" class="form-control form-control-sm" value="@Model.PriceForBuy" onchange="validatePrices()" />
						</div>
								
			    	</div>		
						
				
						
						
				  
				    
				    
				
				    <div class="row mt-3 align-items-center">
						
						  
						  <div class="col-md-3" >
							<label class="small">Update Sale?</label>
									<div class="form-check">
										<input type="radio" id="UpdateSaleNo" name="UpdateSale" class="form-check-input" value="0" onchange="DealWitheDiscountFields()" checked>
										<label for="UpdateSaleNo" class="form-check-label">No Update</label>
									</div>
									<div class="form-check">
										<input type="radio" id="UpdateSaleYes" name="UpdateSale" class="form-check-input" value="1" onchange="DealWitheDiscountFields()">
										<label for="UpdateSaleYes" class="form-check-label">Update Sale</label>
									</div>
							</div>

							

							<div class="col-md-3" id="SaleDurationContainer">
									  <label for="AmountOfSaleDays" class="small">Amount of days for the sale:</label>
									  <select id="AmountOfSaleDays" name="AmountOfSaleDays" class="form-control form-control-sm" disabled value="@Model.AmountOfSaleDays">
																			
									   <option value="1" >1 day</option>
									   <option value="2" >2 days</option>
									   <option value="3" >3 days</option>
									   <option value="4" >4 days</option>
									   <option value="5" >5 days</option>
									   <option value="6" >6 days</option>
									   <option value="7" >7 days</option>
									  </select>
							 </div>

								

			     	</div>

				
				
				    <div class="row mt-3 align-items-center">


					   
				           <div class="col-md-3">

										<label for="DISCOUNTEDPriceForBorrow" class="small"> Discounted Price for Borrow:</label>
										@if (@Model.DISCOUNTEDPriceForBorrow > 0 && Model.BuyOnly==false)
										{
											<input type="number" step="0.01" id="DISCOUNTEDPriceForBorrow" name="DISCOUNTEDPriceForBorrow" class="form-control form-control-sm" disabled value="@Model.DISCOUNTEDPriceForBorrow" onchange="validatePrices()">
										}
										else
										{
											<input type="number" step="0.01" id="DISCOUNTEDPriceForBorrow" name="DISCOUNTEDPriceForBorrow" class="form-control form-control-sm" disabled onchange="validatePrices()">
										}

							</div>
					   

					

					       <div class="col-md-3">

										<label for="DISCOUNTEDPriceForBuy" class="small"> Discounted Price for Buy:</label>

										@if (@Model.DISCOUNTEDPriceForBuy > 0)
										{
											<input type="number" step="0.01" id="DISCOUNTEDPriceForBuy" name="DISCOUNTEDPriceForBuy" class="form-control form-control-sm" disabled value="@Model.DISCOUNTEDPriceForBuy" onchange="validatePrices()">
										}

										else
										{
											<input type="number" step="0.01" id="DISCOUNTEDPriceForBuy" name="DISCOUNTEDPriceForBuy" class="form-control form-control-sm" disabled onchange="validatePrices()">

										}

					       </div>
					
				     </div>



							<script>
									 function DealWithBuyOnly() {
								   const isBuyOnly = document.querySelector('input[name="BuyOnly"]:checked').value;
								   const borrowField = document.getElementById("PriceForBorrow");
									  const discountedBorrowField = document.getElementById("DISCOUNTEDPriceForBorrow");
									  const updateSale = document.querySelector('input[name="UpdateSale"]:checked').value;
								   const discountedBuyField = document.getElementById("DISCOUNTEDPriceForBuy");
									  const saleDurationField = document.getElementById("AmountOfSaleDays");

								if (isBuyOnly === "true") { // Book is Buy Only
									 borrowField.disabled = true;
											 borrowField.value = "";
											 discountedBorrowField.disabled = true;
											 discountedBorrowField.value = "";
										 } else { // Book is not Buy Only
											 borrowField.disabled = false;
											 DealWitheDiscountFields(); // Call to update the discount-related fields
								   }

									  // If book is Buy Only and Update Sale is enabled, disable discountedBorrowField
									  if (isBuyOnly === "true" && updateSale === "1") {
									   discountedBorrowField.disabled = true;
										discountedBorrowField.value = "";
										 }
									 }
							</script>

							<script>
								function DealWitheDiscountFields() {
									const updateSale = document.querySelector('input[name="UpdateSale"]:checked').value;
									const discountedBuyField = document.getElementById("DISCOUNTEDPriceForBuy");
									const discountedBorrowField = document.getElementById("DISCOUNTEDPriceForBorrow");
									const buyOnlyValue = document.querySelector('input[name="BuyOnly"]:checked').value;
									const saleDurationField = document.getElementById("AmountOfSaleDays");

									if (updateSale === "1") {
										discountedBuyField.disabled = false;
										saleDurationField.disabled = false;

										if (buyOnlyValue === "true") { // Book is Buy Only
											discountedBorrowField.disabled = true;
											discountedBorrowField.value = "";
										} else {
											discountedBorrowField.disabled = false;
										}
									} else {
										discountedBuyField.disabled = true;
										discountedBorrowField.disabled = true;
										saleDurationField.disabled = true;

										if (buyOnlyValue === "true") { // Book is Buy Only
											discountedBorrowField.value = "";
										}
									}
								}
							</script>



						





								<script>
									function validatePrices() {
										const priceForBuy = parseFloat(document.getElementById("PriceForBuy").value) || 0;
										const priceForBorrow = parseFloat(document.getElementById("PriceForBorrow").value) || 0;
										const discountedPriceForBuy = parseFloat(document.getElementById("DISCOUNTEDPriceForBuy").value) || 0;
										const discountedPriceForBorrow = parseFloat(document.getElementById("DISCOUNTEDPriceForBorrow").value) || 0;

										const priceForBuyField = document.getElementById("PriceForBuy");
										const priceForBorrowField = document.getElementById("PriceForBorrow");

										// Validate if the entered Buy price is lower than the discounted price
										if (priceForBuy < discountedPriceForBuy && priceForBuy > 0) {
											priceForBuyField.setCustomValidity("Buy price cannot be lower than the discounted price.");
											priceForBuyField.reportValidity();  // Display validation message
										} else {
											priceForBuyField.setCustomValidity("");  // Clear validation message
										}

										// Validate if the entered Borrow price is lower than the discounted price
										if (priceForBorrow < discountedPriceForBorrow && priceForBorrow > 0) {
											priceForBorrowField.setCustomValidity("Borrow price cannot be lower than the discounted price.");
											priceForBorrowField.reportValidity();  // Display validation message
										} else {
											priceForBorrowField.setCustomValidity("");  // Clear validation message
										}
									}
								</script>




								


						<div class="form-group">
								<label>Available Formats:</label>
								<div class="form-check">
									<input type="checkbox" class="form-check-input" id="PDF" name="PDF" value="true" @(Model.PDF ? "checked" : "")>
									<label class="form-check-label" for="PDF">PDF</label>
								</div>
								<div class="form-check">
									<input type="checkbox" class="form-check-input" id="epub" name="epub" value="true" @(Model.epub ? "checked" : "")>
									<label class="form-check-label" for="epub">epub</label>
								</div>
								<div class="form-check">
									<input type="checkbox" class="form-check-input" id="f2b" name="f2b" value="true" @(Model.f2b ? "checked" : "")>
									<label class="form-check-label" for="f2b">f2b</label>
								</div>
								<div class="form-check">
									<input type="checkbox" class="form-check-input" id="mobi" name="mobi" value="true" @(Model.mobi ? "checked" : "")>
									<label class="form-check-label" for="mobi">mobi</label>
								</div>
							</div>


						@if (TempData["Message"] != null)
						{
						<div class="alert alert-info">
								@TempData["Message"]
						</div>
						}

						
					<button type="submit" class="btn btn-primary btn-sm d-block mx-auto">Update</button>
				</form>
				 <br />
				 <br />

					


						<form action="ShowAdminPage" method="POST">
							<button type="submit" class="btn btn-primary btn-sm d-block mx-auto">Return to my Home Page</button>
							
						
						</form>


						<form action="DeleteSale" method="post" class="d-inline">
							<input type="hidden" name="BookTitle" value="@Model.BookTitle" />
							<input type="hidden" name="Author" value="@Model.Author" />
							<input type="hidden" name="Publisher" value="@Model.Publisher" />
							<input type="hidden" name="YearOfPublication" value="@Model.YearOfPublication" />


							<button type="submit" name="DeleteSale" value="Delete" class="btn btn-danger btn-sm">Delete Sale</button>
						</form>


					<!-- Modal HTML -->
					<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
						<div class="modal-dialog">
							<div class="modal-content">
								<div class="modal-header">
									<h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
									<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
								</div>
								<div class="modal-body">
									Are you sure you want to delete this book?
								</div>
								<div class="modal-footer">
									<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
									<button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
								</div>
							</div>
						</div>
					</div>
		

						
					<!-- Form for deleting book -->
					<form action="/Admin/DeleteBook" method="post" class="d-inline" id="deleteForm">
						<input type="hidden" name="BookTitle" value="@Model.BookTitle" />
						<input type="hidden" name="Author" value="@Model.Author" />
						<input type="hidden" name="Publisher" value="@Model.Publisher" />
						<input type="hidden" name="YearOfPublication" value="@Model.YearOfPublication" />
						<button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal">Delete Book</button>
					</form>

					<!-- Include Bootstrap JavaScript and CSS -->
					<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

					<script>
						// Confirm delete button event
						document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
							// Submit the form when user confirms deletion
							document.getElementById('deleteForm').submit();
						});
					</script>


		


					
				
			</div>


		</div>

		}

			@if (TempData["MESSAGEdelete"] != null)
			{
				<div class="alert alert-info text-center">
					<strong>Notice: </strong>@TempData["MESSAGEdelete"]
				</div>

				<div class="d-flex justify-content-center">
					<form action="ShowAdminPage" method="POST">
						<button type="submit" class="btn btn-primary btn-lg">Return to Admin Home Page</button>
					</form>
				</div>
			}

</div>

</div>
</div>


<style>
	body {
		background-color: #E6F3FF;
	}

	.navbar {
		background-color: #4DA8DA !important;
	}

	.card {
		background-color: #F0F8FF;
		border: 1px solid #87CEFA;
	}

	.card-header {
		background-color: #B0E0E6;
		color: #00008B;
	}

	.btn-primary {
		background-color: #4DA8DA;
		border-color: #4DA8DA;
	}

		.btn-primary:hover {
			background-color: #1E90FF;
			border-color: #1E90FF;
		}

	.btn-outline-primary {
		color: #4DA8DA;
		border-color: #4DA8DA;
	}

		.btn-outline-primary:hover {
			background-color: #4DA8DA;
			color: white;
		}

	.table {
		background-color: white;
	}

	.marquee {
		background-color: #B0E0E6;
		color: #00008B;
	}
</style>
